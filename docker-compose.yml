version: "3.9"

services:
  db:
    image: mariadb:lts
    container_name: progression_db_$CI_ENVIRONMENT_SLUG
    env_file: ${ENV_FILE:-.env}
    volumes:
      - data:/var/lib/mysql
    restart: always
    healthcheck:
      test: 'mysql -u root -p$$DB_PASSWORD --silent --execute "SELECT 1;" > /tmp/test 2>&1'
      interval: 10s
      timeout: 20s
      retries: 10
    networks:
      - progression_net

  redis:
    image: redis:latest
    container_name: progression_redis_$CI_ENVIRONMENT_SLUG
    volumes:
      - cache:/data
    restart: always
    networks:
      - progression_net

  api:
    image: $CI_REGISTRY/$CI_PROJECT_PATH:$TAG_DEPLOY
    build:
      dockerfile: docker/Dockerfile
      target: production
      context: .
    container_name: progression_api_$CI_ENVIRONMENT_SLUG
    env_file:
      - ${ENV_FILE:-.env}
      - VERSION
    environment:
      - APP_COMMIT_SHA=$CI_COMMIT_SHORT_SHA
    ports:
      - 127.0.0.1:$INSTANCE_PORT:80
    #En développement, monte les source dans le conteneur
    #volumes:
    #  - "./progression/app/:/var/www/progression/app/"
    restart: always
    networks:
      - progression_net
    depends_on:
      - db
      - redis

  tests:
    image: $CI_REGISTRY/$CI_PROJECT_PATH:$BRANCHE
    build:
      dockerfile: docker/Dockerfile
      target: production
      context: .
    #En développement, monte les source dans le conteneur
    #volumes:
    #  - "./progression_backend/progression/:/var/www/progression/"
    restart: "no"
    env_file:
      - env.testing
      - VERSION
    entrypoint: bash /var/www/progression/tests/exec_tests.sh
    user: www-data
    networks:
      - progression_net
    depends_on:
      db:
        condition: service_healthy

  lint:
    image: $CI_REGISTRY/$CI_PROJECT_PATH:$BRANCHE
    restart: "no"
    networks:
      - progression_net
    command: prettier -c /var/www/progression/{app,tests}/**/*.php

  doc:
    image: $CI_REGISTRY/progression/publication:latest
    volumes:
      - "./doc/:/tmp/doc/"
      - "./doc/:/tmp/progression/app/html/doc/"
    command: bash -c 'if which emacs; then emacs --batch --load /root/.emacs.el --load /tmp/doc/publish.el --funcall org-publish-all; else (echo "Veuillez installer les outils de production de la documentation (voir Dockerfile)" && exit); fi'
    networks:
      - progression_net

volumes:
  data:
  cache:

networks:
  progression_net:
    name: progression_net_$CI_ENVIRONMENT_SLUG
